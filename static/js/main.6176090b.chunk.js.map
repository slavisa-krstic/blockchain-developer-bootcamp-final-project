{"version":3,"sources":["context/AppContext.js","core/history.js","hooks/useConnectNetwork.js","hooks/useEthContract.js","hooks/useEthereumBalance.js","hooks/useGuessNumberGame.js","pages/GuessNumber/styles.js","pages/GuessNumber/index.js","hooks/useLuckyNumberToken.js","pages/CreateGuessNumberGame/styles.js","pages/CreateGuessNumberGame/index.js","pages/Home/styles.js","pages/Home/index.js","pages/Loading/styles.js","pages/Loading/index.js","pages/Layout/styles.js","pages/Layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultContext","ethereumBalance","setEthereumBalance","luckyNumberTokenBalance","setLuckyNumberTokenBalanceBalance","numberOfWinnings","setNumberOfWinnings","numberOfLosses","setNumberOfLosses","isTheOwner","setIsTheOwner","numberOfAvailableGames","setNumberOfAvailableGames","applicationError","undefined","setApplicationError","appReducer","state","type","payload","AppContext","createContext","useAppContext","React","useContext","AppContextProvider","children","useReducer","store","dispatch","contextValue","balance","setLuckyNumberTokenBalance","numb","isOwner","str","Provider","value","createBrowserHistory","useConnectNetwork","useWeb3React","activate","active","account","deactivate","injected","InjectedConnector","supportedChainIds","useEffect","window","ethereum","connect","e","UnsupportedChainIdError","useEthContract","contractAddress","ABI","library","provider","getSigner","connectUnchecked","useMemo","Contract","useEthereumBalance","getEthereumBalance","a","getBalance","parseFloat","formatEther","toPrecision","useGuessNumberGame","chainId","useState","guessNumber","setGuessNumber","refresh","setRefresh","waitingTx","setWaitingTx","guessNumberContract","GuessNumber","networks","address","AddressZero","abi","getNumberOfWinnings","getNumberOfPlayerWinnings","Number","getNumberOfLosses","getNumberOfPlayerLosses","getIsTheOwner","Boolean","getNumberOfAvailableGames","createNewGuessNumberGame","createGuessingNumberGame","result","wait","playGuessNumberGame","guessTheNumber","makeStyles","guessButtons","marginTop","display","justifyContent","alignItems","fontSize","border","guessSendButtons","canNotPlay","color","classes","useStyles","getLuckyNumberTokenBalance","tokenBalance","formatUnits","useLuckyNumberToken","canPlay","Box","Container","maxWidth","className","Button","variant","onClick","endIcon","disabled","CreateGuessNumberGame","notConnected","connected","Home","Fragment","theme","loader","Loading","my","Typography","component","gutterBottom","LinearProgress","data-testid","root","drawer","width","flexShrink","zIndex","drawerPaper","content","flexGrow","minHeight","position","top","marginLeft","appBar","drawerContainer","overflow","textColor","Layout","AppBar","Toolbar","noWrap","Drawer","paper","anchor","List","ListItem","button","ListItemIcon","ListItemText","getLibrary","ethers","providers","Web3Provider","App","history","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6176090b.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst defaultContext = {\n  ethereumBalance: '-',\n  setEthereumBalance: () => {},\n\n  luckyNumberTokenBalance: '-',\n  setLuckyNumberTokenBalanceBalance: () => {},\n\n  numberOfWinnings: '-',\n  setNumberOfWinnings: () => {},\n\n  numberOfLosses: '-',\n  setNumberOfLosses: () => {},\n\n  isTheOwner: false,\n  setIsTheOwner: () => {},\n\n  numberOfAvailableGames: 0,\n  setNumberOfAvailableGames: () => {},\n\n  applicationError: undefined,\n  setApplicationError: () => {},\n}\n\nconst appReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_ETHEREUM_BALANCE':\n      return {\n        ...state,\n        ethereumBalance: payload,\n      };\n    case 'SET_LUCKY_NUMBER_TOKEN_BALANCE':\n      return {\n        ...state,\n        luckyNumberTokenBalance: payload,\n      };\n    case 'SET_NUMBER_OF_WINNINGS':\n      return {\n        ...state,\n        numberOfWinnings: payload,\n      };\n    case 'SET_NUMBER_OF_LOSSES':\n      return {\n        ...state,\n        numberOfLosses: payload,\n      };\n    case 'SET_IS_THE_OWNER': \n      return {\n        ...state,\n        isTheOwner: payload,\n      };\n    case 'SET_NUMBER_OF_AVAILABLE_GAMES': \n      return {\n        ...state,\n        numberOfAvailableGames: payload,\n      };\n    case 'SET_APPLICATION_ERROR':\n      return {\n        ...state,\n        applicationError: payload,\n      };\n    default:\n      return state;\n  }\n}\n\nconst AppContext = createContext(defaultContext);\n\nexport const useAppContext = () => React.useContext(AppContext);\n\nexport const AppContextProvider = ({ children }) => {\n  const [store, dispatch] = useReducer(appReducer, defaultContext);\n\n  const contextValue = {\n    ethereumBalance: store.ethereumBalance,\n    setEthereumBalance: (balance) => {\n      dispatch({ type: 'SET_ETHEREUM_BALANCE', payload: balance });\n    },\n    luckyNumberTokenBalance: store.luckyNumberTokenBalance,\n    setLuckyNumberTokenBalance: (balance) => {\n      dispatch({ type: 'SET_LUCKY_NUMBER_TOKEN_BALANCE', payload: balance });\n    },\n    numberOfWinnings: store.numberOfWinnings,\n    setNumberOfWinnings: (numb) => {\n      dispatch({ type: 'SET_NUMBER_OF_WINNINGS', payload: numb });\n    },\n    numberOfLosses: store.numberOfLosses,\n    setNumberOfLosses: (numb) => {\n      dispatch({ type: 'SET_NUMBER_OF_LOSSES', payload: numb });\n    },\n    isTheOwner: store.isTheOwner,\n    setIsTheOwner: (isOwner) => {\n      dispatch({ type: 'SET_IS_THE_OWNER', payload: isOwner });\n    },\n    numberOfAvailableGames: store.numberOfAvailableGames,\n    setNumberOfAvailableGames: (numb) => {\n      dispatch({ type: 'SET_NUMBER_OF_AVAILABLE_GAMES', payload: numb });\n    },\n    applicationError: store.applicationError,\n    setApplicationError: (str) => {\n      dispatch({ type: 'SET_APPLICATION_ERROR', payload: str });\n    }\n  }\n\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\n}","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import { useEffect} from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\n\n// Application context\nimport { useAppContext } from '../context/AppContext';\n\nexport const useConnectNetwork = () => {\n  const { activate, active, account, deactivate } = useWeb3React();\n  const { setApplicationError } = useAppContext();\n\n  const injected = new InjectedConnector({ supportedChainIds: [1, 3, 1337] });\n\n  useEffect(() => {\n    if (!window.ethereum) {\n      setApplicationError(\"Metamask is not installed. Please install it to be able to start the game\");\n      return;\n    }\n  }, [setApplicationError]);\n\n  const connect = () => {\n    if (!window.ethereum) {\n      setApplicationError(\"Metamask is not installed. Please install it to be able to start the game\");\n      return;\n    }\n    activate(injected, (e) => {\n      if (e instanceof UnsupportedChainIdError) {\n        setApplicationError('Network is not supported');\n      }\n    })\n  }\n\n  return {\n    activate, \n    active,\n    account,\n    deactivate,\n    connect,\n  };\n};","// React\nimport { useMemo } from 'react';\n\n// ETH\nimport { useWeb3React } from '@web3-react/core';\nimport { Contract } from '@ethersproject/contracts';\n\nexport function useEthContract(contractAddress, ABI) {\n  const { library, account } = useWeb3React();\n\n  let provider = library\n  if (account) {\n    provider = library.getSigner(account).connectUnchecked()\n  }\n\n  return useMemo(() => {\n    return new Contract(contractAddress, ABI, provider);\n  }, [contractAddress, ABI, provider]);\n}","import { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { formatEther } from '@ethersproject/units';\n\n// Application context\nimport { useAppContext } from '../context/AppContext';\n\nexport const useEthereumBalance = () => {\n  const { active, library, account } = useWeb3React();\n  const { setEthereumBalance, ethereumBalance } = useAppContext();\n\n  const getEthereumBalance = async () => {\n    if (library && active && account) {\n      const balance = await library.getBalance(account);\n      setEthereumBalance(parseFloat(formatEther(balance)).toPrecision(4));\n    } else {\n      setEthereumBalance('-');\n    }\n  };\n\n  useEffect(() => {\n    if (account && active) {\n      getEthereumBalance();\n    } else {\n      setEthereumBalance(\"-\");\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active]);\n\n  return {\n    ethereumBalance\n  };\n};","import { useEffect, useState } from 'react';\nimport { useEthContract } from './useEthContract';\nimport { useWeb3React } from '@web3-react/core';\nimport { AddressZero } from '@ethersproject/constants';\n\n// Guess number contract\nimport GuessNumber from '../contracts/GuessNumber.json';\n\n// Application context\nimport { useAppContext } from '../context/AppContext';\n\nexport const useGuessNumberGame = () => {\n  const { account, chainId, active } = useWeb3React();\n  const [guessNumber, setGuessNumber] = useState('-');\n  const [refresh, setRefresh] = useState(0);\n  const [waitingTx, setWaitingTx] = useState(false);\n\n  const address = GuessNumber.networks && GuessNumber.networks[chainId] ? \n    GuessNumber.networks[chainId].address : \n    AddressZero;\n\n  const guessNumberContract = useEthContract(address, GuessNumber.abi);\n    \n  const { \n    setNumberOfWinnings, numberOfWinnings,\n    setNumberOfLosses, numberOfLosses,\n    setIsTheOwner, isTheOwner,\n    setNumberOfAvailableGames, numberOfAvailableGames,\n    setApplicationError\n  } = useAppContext();\n\n  const getNumberOfWinnings = async () => {\n    try {\n      const numb = await guessNumberContract.getNumberOfPlayerWinnings();\n      setNumberOfWinnings(Number(numb));\n    } catch (error) {\n      setNumberOfWinnings('-');\n    }\n  };\n\n  const getNumberOfLosses = async () => {\n    try {\n      const numb = await guessNumberContract.getNumberOfPlayerLosses();\n      setNumberOfLosses(Number(numb));\n    } catch (error) {\n      setNumberOfLosses('-');\n    }\n  };\n\n  const getIsTheOwner = async () => {\n    try {\n      const isOwner = await guessNumberContract.isTheOwner();\n      setIsTheOwner(Boolean(isOwner));\n    } catch (error) {\n      setIsTheOwner(false);\n    }\n  };\n\n  const getNumberOfAvailableGames = async () => {\n    try {\n      const numb = await guessNumberContract.getNumberOfAvailableGames();\n      setNumberOfAvailableGames(Number(numb));\n    } catch (error) {\n      setNumberOfAvailableGames('-');\n    }\n  };\n\n  const createNewGuessNumberGame = async () => {\n    try {\n      setWaitingTx(true);\n      const result = await guessNumberContract.createGuessingNumberGame(guessNumber);\n      await result.wait(1);\n      setWaitingTx(false);\n      setApplicationError(\"\");\n      setGuessNumber('-');\n      setRefresh(refresh + 1);\n    } catch (error) {\n      setGuessNumber(guessNumber);\n      setWaitingTx(false);\n      setApplicationError(\"Error executing 'creating guess game' transaction. Try again (raise gas price).\");\n    }\n  }\n\n  const playGuessNumberGame = async () => {\n    try {\n      setWaitingTx(true);\n      const result = await guessNumberContract.guessTheNumber(guessNumber);\n      await result.wait(1);\n      setWaitingTx(false);\n      setApplicationError(\"\");\n      setGuessNumber('-');\n      setRefresh(refresh + 1);\n    } catch (error) {\n      setGuessNumber(guessNumber);\n      setWaitingTx(false);\n      setApplicationError(\"Error executing 'play guess game' transaction. Try again (raise gas price).\");\n    }\n  }\n\n  useEffect(() => {\n    if (account && active) {\n      getNumberOfWinnings();\n    } else {\n      setNumberOfWinnings('-');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active, refresh]);\n\n  useEffect(() => {\n    if (account && active) {\n      getNumberOfLosses();\n    } else {\n      setNumberOfLosses('-');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active, refresh]);\n\n  useEffect(() => {\n    if (account && active) {\n      getIsTheOwner();\n    } else {\n      setIsTheOwner(true);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active, refresh]);\n\n  useEffect(() => {\n    if (account && active) {\n      getNumberOfAvailableGames();\n    } else {\n      setNumberOfAvailableGames('-');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active, refresh]);\n\n  return {\n    numberOfWinnings,\n    numberOfLosses,\n    isTheOwner,\n    numberOfAvailableGames,\n    setGuessNumber,\n    guessNumber,\n    createNewGuessNumberGame,\n    playGuessNumberGame,\n    refresh,\n    waitingTx\n  };\n};","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  guessButtons: {\n    marginTop: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  guessNumber: {\n    marginTop: \"30px\",\n    fontSize: \"150px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"1px solid #3f51b5;\"\n  },\n  guessSendButtons: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  canNotPlay: {\n    color: \"red\"\n  }\n}));\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container'\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\n// Hooks\nimport { useConnectNetwork } from './../../hooks/useConnectNetwork';\nimport { useLuckyNumberToken } from './../../hooks/useLuckyNumberToken';\nimport { useEthereumBalance } from './../../hooks/useEthereumBalance';\nimport { useGuessNumberGame } from './../../hooks/useGuessNumberGame';\n\n// Styles\nimport useStyles from \"./styles\";\n\nconst GuessNumber = () => {\n  const classes = useStyles();\n\n  const {\n    guessNumber,\n    setGuessNumber,\n    playGuessNumberGame,\n    numberOfAvailableGames,\n    numberOfWinnings,\n    numberOfLosses,\n    refresh,\n    waitingTx\n  } = useGuessNumberGame();\n\n  const {\n    account,\n  } = useConnectNetwork();\n\n  const {\n    luckyNumberTokenBalance\n  } = useLuckyNumberToken(refresh);\n\n  const {\n    ethereumBalance\n  } = useEthereumBalance();\n\n  const canPlay = numberOfAvailableGames > 5 && guessNumber !== \"-\";\n\n  return (\n    <Box>\n      <div>Address: {account}</div>\n      <div>ETH: {ethereumBalance}</div>\n      <div>Lucky number token (LNT): {luckyNumberTokenBalance}</div>\n      <div>Number of winnings: {numberOfWinnings}</div>\n      <div>Number of losses: {numberOfLosses}</div>\n      <Box>\n        <Container maxWidth=\"sm\" className={classes.guessNumber}>\n          <label>{guessNumber}</label>\n          </Container>\n          <Container maxWidth=\"sm\" className={classes.guessButtons}>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(1)}>1</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(2)}>2</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(3)}>3</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(4)}>4</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(5)}>5</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(6)}>6</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(7)}>7</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(8)}>8</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(9)}>9</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(10)}>10</Button>\n          </Container>\n          <Container maxWidth=\"sm\" className={classes.guessSendButtons}>\n            <Button \n              variant=\"contained\" \n              endIcon={<SendIcon />}\n              disabled={!canPlay || waitingTx}\n              onClick={() => playGuessNumberGame()}\n            > \n              Send Guessing \n            </Button>\n        </Container>\n        {!canPlay && <Container maxWidth=\"sm\" className={classes.guessSendButtons}>\n          {numberOfAvailableGames > 5 && guessNumber === \"-\" &&<Box className={classes.canNotPlay}>Please select your number</Box>}\n          {numberOfAvailableGames < 6 && <Box className={classes.canNotPlay}>Waiting for organizer to create more games!!!</Box>}\n        </Container>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default GuessNumber;","import { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { formatUnits } from '@ethersproject/units';\nimport { AddressZero } from '@ethersproject/constants';\n\n// Hooks\nimport { useEthContract } from './useEthContract';\n\n// Guess number contract\nimport GuessNumber from '../contracts/GuessNumber.json';\n\n// Application context\nimport { useAppContext } from '../context/AppContext';\n\nexport const useLuckyNumberToken = (refresh) => {\n  const { account, chainId, active } = useWeb3React();\n  const address = GuessNumber.networks && GuessNumber.networks[chainId] ? \n    GuessNumber.networks[chainId].address : \n    AddressZero;\n\n  const guessNumberContract = useEthContract(address, GuessNumber.abi);\n    \n  const { setLuckyNumberTokenBalance, luckyNumberTokenBalance } = useAppContext();\n\n  const getLuckyNumberTokenBalance = async () => {\n    try {\n      const tokenBalance = await guessNumberContract.getLuckyNumberTokenBalance(account);\n      setLuckyNumberTokenBalance(formatUnits(tokenBalance, 8));\n    } catch (error) {\n      setLuckyNumberTokenBalance('-');\n    }\n  };\n\n  useEffect(() => {\n    if (account && active) {\n      getLuckyNumberTokenBalance();\n    } else {\n      setLuckyNumberTokenBalance(\"-\");\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, active, refresh]);\n\n  return {\n    luckyNumberTokenBalance,\n  };\n};","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  guessButtons: {\n    marginTop: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  guessNumber: {\n    marginTop: \"30px\",\n    fontSize: \"150px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"1px solid #3f51b5;\"\n  },\n  guessSendButtons: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container'\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\n// Hooks\nimport { useConnectNetwork } from './../../hooks/useConnectNetwork';\nimport { useEthereumBalance } from './../../hooks/useEthereumBalance';\nimport { useGuessNumberGame } from './../../hooks/useGuessNumberGame';\n\n// Styles\nimport useStyles from \"./styles\";\n\nconst CreateGuessNumberGame = () => {\n  const classes = useStyles();\n\n  const {\n    guessNumber,\n    setGuessNumber,\n    createNewGuessNumberGame,\n    numberOfAvailableGames,\n    waitingTx\n  } = useGuessNumberGame();\n\n  const {\n    account,\n  } = useConnectNetwork();\n\n  const {\n    ethereumBalance\n  } = useEthereumBalance();\n\n  return (\n    <Box>\n      <div>Address: {account}</div>\n      <div>ETH: {ethereumBalance}</div>\n      <div>Number of available games: {numberOfAvailableGames}</div>\n      <Box>\n        <Container maxWidth=\"sm\" className={classes.guessNumber}>\n          <label>{guessNumber}</label>\n          </Container>\n          <Container maxWidth=\"sm\" className={classes.guessButtons}>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(1)}>1</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(2)}>2</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(3)}>3</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(4)}>4</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(5)}>5</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(6)}>6</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(7)}>7</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(8)}>8</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(9)}>9</Button>\n            <Button variant=\"contained\" onClick={() => setGuessNumber(10)}>10</Button>\n          </Container>\n          <Container maxWidth=\"sm\" className={classes.guessSendButtons}>\n            <Button \n              variant=\"contained\" \n              endIcon={<SendIcon />}\n              disabled={guessNumber === \"-\" || waitingTx}\n              onClick={() => createNewGuessNumberGame()}\n            > \n              Create New Guessing Game \n            </Button>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CreateGuessNumberGame;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  notConnected: {\n    marginTop: \"30px\",\n    fontSize: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  connected: {\n    marginTop: \"30px\",\n    fontSize: \"12px\",\n    display: \"flex\",\n    color: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  }\n}));\n","import React from 'react';\n\nimport { useWeb3React } from '@web3-react/core';\n\n// Custom components\nimport GuessNumber from \"../GuessNumber\";\nimport CreateGuessNumberGame from \"../CreateGuessNumberGame\";\n\nimport useStyles from \"./styles\";\nimport { Container } from '@material-ui/core';\n\n// Application context\nimport { useAppContext } from './../../context/AppContext';\n\n// Hooks\nimport { useGuessNumberGame } from './../../hooks/useGuessNumberGame';\n\nconst Home = () => {\n  const { active } = useWeb3React();\n  const classes = useStyles();\n\n  const { applicationError } = useAppContext();\n\n  const { isTheOwner } = useGuessNumberGame();\n\n  return (\n    <React.Fragment>\n      {active && !isTheOwner && <GuessNumber />}\n      {active && isTheOwner && <CreateGuessNumberGame />}\n      {!active && !applicationError && \n        <React.Fragment>\n          <Container maxWidth=\"sm\" className={classes.notConnected}>\n            <div>Please connect to your account</div>\n          </Container>\n        </React.Fragment>\n      }\n      {!active && applicationError && \n        <React.Fragment>\n          <Container maxWidth=\"sm\" className={classes.notConnected}>\n            <div>{applicationError}</div>\n          </Container>\n        </React.Fragment>\n      }\n      {applicationError && \n        <React.Fragment>\n          <Container maxWidth=\"sm\" className={classes.connected}>\n            <div>{applicationError}</div>\n          </Container>\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Home;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(theme => ({\n  loader: {\n    marginTop: \"200px\"\n  }\n}));","// Material UI\nimport { Box, Container, LinearProgress, Typography } from \"@material-ui/core\";\n\n// Styles\nimport useStyles from \"./styles\";\n\nconst Loading = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          gutterBottom \n          className={classes.loader}\n        >\n          <LinearProgress data-testid=\"linear-progress-id\" />\n        </Typography>\n      </Box>\n    </Container>\n  )\n};\n\nexport default Loading;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    width: 200,\n    flexShrink: 0,\n    zIndex: 999\n  },\n  drawerPaper: {\n    width: 200\n  },\n  content: {\n    flexGrow: 1,\n    minHeight: \"100vh\",\n    position: \"relative\",\n    top: \"100px\",\n    marginLeft: \"40px\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  textColor: {\n    color: \"#3f51b5\"\n  }\n}));\n","// Material UI\nimport { \n  AppBar, \n  Drawer, \n  List, \n  ListItem, \n  ListItemIcon, \n  ListItemText, \n  Toolbar, \n  Typography \n} from \"@material-ui/core\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport CloudOff from \"@material-ui/icons/CloudOff\";\n\n// Hooks\nimport { useWeb3React } from '@web3-react/core';\n\n// Styles\nimport useStyles from \"./styles\";\nimport { useConnectNetwork } from './../../hooks/useConnectNetwork';\n\nconst Layout = ({ children }) => {\n  const { active } = useWeb3React();\n  const classes = useStyles();\n\n  const {\n    deactivate,\n    connect\n  } = useConnectNetwork();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap data-testid=\"general-title\">\n            Final project Guess Number Game - Slavisa Krstic\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {!active && <ListItem button key=\"New\" color=\"primary\" onClick={() => connect()} data-testid=\"new-post\">\n              <ListItemIcon><CloudOff color=\"primary\" /></ListItemIcon>\n              <ListItemText className={classes.textColor} >Connect</ListItemText>\n            </ListItem>}\n            {active && <ListItem button key=\"New\" color=\"primary\" onClick={() => deactivate()} data-testid=\"new-post\">\n              <ListItemIcon><CloudIcon color=\"primary\" /></ListItemIcon>\n              <ListItemText className={classes.textColor} >Disconnect</ListItemText>\n            </ListItem>}\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default Layout;","import React, { Suspense }  from 'react'\nimport { Switch, Route } from \"react-router\";\nimport { Router } from \"react-router-dom\";\n\nimport { ethers } from 'ethers';\nimport { Web3ReactProvider } from '@web3-react/core'\n\nimport { AppContextProvider } from './context/AppContext';\n\nimport history from \"./core/history\"\n\n// Custom components\nimport Home from './pages/Home';\nimport Loading from \"./pages/Loading\";\nimport Layout from \"./pages/Layout\";\n\nconst getLibrary = (provider) => new ethers.providers.Web3Provider(provider);\n\nexport default function App () {\n  return (\n    <AppContextProvider>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Router history={history}>\n          <Switch>\n            <Suspense fallback={<Loading />}>\n              <Layout>\n                <Route path=\"/\" component={Home} />\n              </Layout>\n            </Suspense>\n          </Switch>\n        </Router>\n      </Web3ReactProvider>\n    </AppContextProvider>\n  )\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}